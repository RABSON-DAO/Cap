{"version":3,"sources":["data/allocation.js","layout/DrawerRouterContainer.tsx","data/info.js","data/positions.js","data/performance.js","services/dataService.ts","layout/Loading.tsx","panels/InfoPanel.tsx","panels/AllocationPanel.tsx","panels/PerformancePanel.tsx","panels/PositionsPanel.tsx","Dashboard.tsx","Home.tsx","App.tsx","index.tsx"],"names":["historyList","items","text","icon","route","children","withRouter","props","history","useHistory","React","useState","expanded","setExpanded","selectedId","setSelectedId","map","item","selected","onSelect","e","itemIndex","push","itemTarget","animation","duration","position","onOverlayClick","className","look","onClick","currentExpanded","src","resource","info","firstName","lastName","title","details","name","value","bitmex","BitmexAPI","a","User","getMargin","currency","historyL","console","log","counter","length","walletBalance","walletDetails","asset","reverse","allocation","slice","getWalletHistory","count","positions","performanceData","getFundInfo","Promise","resolve","setTimeout","Math","random","Loading","InfoPanel","fundInfo","setFundInfo","useEffect","then","data","widgetPropsAny","style","opacity","labelContent","renderTooltip","point","category","AllocationPanel","setData","type","content","background","color","visible","render","PerformancePanel","TData","BDates","readyDates","dates","setDates","balances","JSON","stringify","bDates","parse","key","currentDate","Date","month","toLocaleString","day","getDate","toString","categories","NumberCell","field","finalValue","dataItem","toFixed","ChangeCell","ChangeDate","date_","substring","PositionsPanel","setPositions","cell","locked","width","Dashboard","Home","alt","App","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e26c037.chunk.js","sourcesContent":["import { map } from \"@progress/kendo-data-query/dist/npm/transducers\";\r\nimport { stringOperator } from \"@progress/kendo-react-data-tools\";\r\nimport { BitmexAPI } from \"bitmex-node\";\r\n\r\n \r\nconst bitmex = new BitmexAPI({\r\n  \"apiKeyID\": \"6SSrlEOLABiedKGHddaZqssG\",\r\n  \"apiKeySecret\": \"4wuzULPH5u1aihuYYekyx0ZD5ez_bEybEjeNCkVzhmD57fkN\",\r\n  //\"proxy\": \"http://cors-anywhere.herokuapp.com/\"\r\n});\r\n\r\n\r\nvar historyList ;\r\nvar totalAssets = 0;\r\n\r\n  !async function() {\r\n\r\n    const historyL  = await bitmex.User.getMargin({currency:\"all\"});\r\n    historyList = await historyL; // [1,2,3,4]\r\n    //var firstElement = historyL.shift(); // theRemovedElement == 1\r\n    console.log(historyL); // [2, 3, 4]\r\n    // add all balances to get total assets\r\n    for(var counter=0;counter<historyL.length;counter++){\r\n      totalAssets += historyList[counter].walletBalance;\r\n\r\n    }\r\n    let details = []; \r\n    let walletDetails = historyList.map(asset => {\r\n      details = {\r\n        \"category\": asset.currency,\r\n        \"value\": (asset.walletBalance)\r\n      };\r\n      \r\n      \r\n      return details;\r\n     });\r\n     walletDetails.reverse();\r\n     //walletDetails.slice(2);\r\n     allocation = walletDetails.slice(2);\r\n     console.log(allocation);\r\n\r\n\r\n\r\n   /*  var currencies = historyList.map(a  => a.currency.toUpperCase());\r\n    map = await bitmex.Quote.get({symbol:'XBT'});\r\n    //var balances = historyList.map(b => b.walletBalance);\r\n\r\n    // Create a map object \r\n    console.log(map);\r\n    */   \r\n    // Loop to insert key & value in this object one by one\r\n    /* for(var i = 0; i < currencies.length; i++){ \r\n      map = await bitmex.Quote.get(currencies[i].toUpperCase());  \r\n      console.log(map);\r\n      //map.push(currencies[i], (balances[i]/totalAssets).toFixed(2) * 100); \r\n    } \r\n\r\n    //allocation = \r\n    //positions = await historyL;\r\n    //performanceData = await historyL;    \r\n    \r\n    console.log(map);\r\n    allocation = map;\r\n    //return positions; */ \r\n  }()\r\n\r\n\r\nexport var allocation = [];\r\n/* [\r\n  { category: \"Domestic\", value: 48.5 },\r\n  { category: \"International\", value: 14.4 },\r\n  { category: \"Bonds\", value: 17.0 },\r\n  { category: \"Cash\", value: 20.1 },\r\n]; */\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { Button } from \"@progress/kendo-react-buttons\";\r\nimport { Drawer, DrawerContent } from \"@progress/kendo-react-layout\";\r\nimport { DrawerSelectEvent } from \"@progress/kendo-react-layout/dist/npm/drawer/interfaces/DrawerSelectEvent\";\r\nimport { logDOM } from \"@testing-library/react\";\r\n\r\nconst user = {\r\n  initials: \"TV\",\r\n  name: \"TJ VanToll\",\r\n  img: \"/logo.svg\"\r\n};\r\n\r\nconst items = [\r\n  { text: \"Home\", icon: \"k-i-home\", route: \"/\", children: null },\r\n  { text: \"Investment Info\", icon: \"k-i-dollar\", route: \"/tech-fund\", children: null }\r\n];\r\n\r\nconst DrawerRouterContainer = (props: React.PropsWithChildren<any>) => {\r\n  const history = useHistory();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [selectedId, setSelectedId] = React.useState(0);\r\n\r\n  const onSelect = (e: DrawerSelectEvent) => {\r\n    setSelectedId(e.itemIndex);\r\n    setExpanded(false);\r\n    history.push(e.itemTarget.props.route);\r\n    // this.props.history.push(e.itemTarget.props.route);\r\n  }\r\n  const closeDrawer = () => {\r\n    setExpanded(false);\r\n  }\r\n  const toggleDrawer = () => {\r\n    setExpanded(currentExpanded => {\r\n      return !currentExpanded;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        expanded={expanded}\r\n        items={items.map(\r\n          (item) => ({ ...item, selected: items[selectedId].text === item.text }))}\r\n        onSelect={onSelect}\r\n        animation={{ duration: 400 }}\r\n        position=\"start\"\r\n        onOverlayClick={closeDrawer}\r\n      >\r\n        <DrawerContent>\r\n          <div className=\"header\">\r\n            <h1>\r\n              <span>\r\n                <Button icon=\"menu\" look=\"flat\" onClick={toggleDrawer} />\r\n                <img src=\"logo.svg\"></img>\r\n                <span className=\"title\">\r\n                  <img resource=\"logo.svg\"></img> \r\n                  {/* <span className=\"divider\">|</span>\r\n                  <span className=\"fund\">{items[selectedId].text}</span> */}\r\n                </span>\r\n              </span>\r\n              {/* <img alt={user.name} src={user.img} /> */}\r\n            </h1>\r\n          </div>\r\n          {props.children}\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(DrawerRouterContainer);\r\n","export const info = {\r\n  \"managers\": [\r\n    {\r\n      firstName: \"Nora\",\r\n      lastName: \"Georgieva\",\r\n      position: \"Lead Investor\"\r\n    }, {\r\n      firstName: \"Carl\",\r\n      lastName: \"Bergenhem\",\r\n      position: \"Advisor\"\r\n    }, {\r\n      firstName: \"Kiril\",\r\n      lastName: \"Peyanski\",\r\n      position: \"Senior Analyst\"\r\n    }, {\r\n      firstName: \"Pamela\",\r\n      lastName: \"Petkova\",\r\n      position: \"Senior Analyst\"\r\n    }, {\r\n      firstName: \"Vasil\",\r\n      lastName: \"Raev\",\r\n      position: \"Junior Associate\"\r\n    }, {\r\n      firstName: \"Genady\",\r\n      lastName: \"Sergeev\",\r\n      position: \"Trainee\"\r\n    }\r\n  ],\r\n  \"quarters\": [\r\n    {\r\n      title: \"Q1 2020\",\r\n      details: [\r\n        { name: \"Expense Ratio\", value: \"0.13%\" },\r\n        { name: \"Minimum Investment\", value: \"$0.00\" },\r\n        { name: \"Turnover Rate\", value: \"11%\" },\r\n        { name: \"Portfolio Assets\", value: \"$5,533M\" },\r\n        { name: \"12-Month Low\", value: \"$35.45\" },\r\n        { name: \"12-Month High\", value: \"$50.59\" }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Q4 2019\",\r\n      details: [\r\n        { name: \"Expense Ratio\", value: \"0.13%\" },\r\n        { name: \"Minimum Investment\", value: \"$0.00\" },\r\n        { name: \"Turnover Rate\", value: \"11%\" },\r\n        { name: \"Portfolio Assets\", value: \"$5,533M\" },\r\n        { name: \"12-Month Low\", value: \"$35.45\" },\r\n        { name: \"12-Month High\", value: \"$50.59\" }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Q3 2019\",\r\n      details: [\r\n        { name: \"Expense Ratio\", value: \"0.13%\" },\r\n        { name: \"Minimum Investment\", value: \"$0.00\" },\r\n        { name: \"Turnover Rate\", value: \"11%\" },\r\n        { name: \"Portfolio Assets\", value: \"$5,533M\" },\r\n        { name: \"12-Month Low\", value: \"$35.45\" },\r\n        { name: \"12-Month High\", value: \"$50.59\" }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Q2 2019\",\r\n      details: [\r\n        { name: \"Expense Ratio\", value: \"0.13%\" },\r\n        { name: \"Minimum Investment\", value: \"$0.00\" },\r\n        { name: \"Turnover Rate\", value: \"11%\" },\r\n        { name: \"Portfolio Assets\", value: \"$5,533M\" },\r\n        { name: \"12-Month Low\", value: \"$35.45\" },\r\n        { name: \"12-Month High\", value: \"$50.59\" }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Q1 2019\",\r\n      details: [\r\n        { name: \"Expense Ratio\", value: \"0.13%\" },\r\n        { name: \"Minimum Investment\", value: \"$0.00\" },\r\n        { name: \"Turnover Rate\", value: \"11%\" },\r\n        { name: \"Portfolio Assets\", value: \"$5,533M\" },\r\n        { name: \"12-Month Low\", value: \"$35.45\" },\r\n        { name: \"12-Month High\", value: \"$50.59\" }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Q4 2018\",\r\n      details: [\r\n        { name: \"Expense Ratio\", value: \"0.13%\" },\r\n        { name: \"Minimum Investment\", value: \"$0.00\" },\r\n        { name: \"Turnover Rate\", value: \"11%\" },\r\n        { name: \"Portfolio Assets\", value: \"$5,533M\" },\r\n        { name: \"12-Month Low\", value: \"$35.45\" },\r\n        { name: \"12-Month High\", value: \"$50.59\" }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Q3 2018\",\r\n      details: [\r\n        { name: \"Expense Ratio\", value: \"0.13%\" },\r\n        { name: \"Minimum Investment\", value: \"$0.00\" },\r\n        { name: \"Turnover Rate\", value: \"11%\" },\r\n        { name: \"Portfolio Assets\", value: \"$5,533M\" },\r\n        { name: \"12-Month Low\", value: \"$35.45\" },\r\n        { name: \"12-Month High\", value: \"$50.59\" }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Q2 2018\",\r\n      details: [\r\n        { name: \"Expense Ratio\", value: \"0.13%\" },\r\n        { name: \"Minimum Investment\", value: \"$0.00\" },\r\n        { name: \"Turnover Rate\", value: \"11%\" },\r\n        { name: \"Portfolio Assets\", value: \"$5,533M\" },\r\n        { name: \"12-Month Low\", value: \"$35.45\" },\r\n        { name: \"12-Month High\", value: \"$50.59\" }\r\n      ]\r\n    }\r\n  ]\r\n}","import { BitmexAPI } from \"bitmex-node\";\r\n\r\n \r\nconst bitmex = new BitmexAPI({\r\n  \"apiKeyID\": \"6SSrlEOLABiedKGHddaZqssG\",\r\n  \"apiKeySecret\": \"4wuzULPH5u1aihuYYekyx0ZD5ez_bEybEjeNCkVzhmD57fkN\",\r\n  //\"proxy\": \"http://cors-anywhere.herokuapp.com/\"\r\n});\r\n\r\n\r\nvar historyList ;\r\n\r\n\r\n  !async function() {\r\n\r\n    const historyL  = await bitmex.User.getWalletHistory({count:15});\r\n    historyList = await historyL; // [1,2,3,4]\r\n    //var firstElement = historyL.shift(); // theRemovedElement == 1\r\n    //console.log(firstElement); // [2, 3, 4]\r\n    positions = await historyL;\r\n    performanceData = await historyL;\r\n\r\n    /* var tempData;\r\n    for(var i=0; i<historyL.length;i++){\r\n      tempData = historyL[i].walletBalance;\r\n      if (tempData != null) performanceData.push(tempData.toString());\r\n      console.log(tempData);\r\n      \r\n}  */\r\n\r\n\r\n    \r\n    console.log(performanceData);\r\n    return positions;\r\n  }()\r\n\r\n\r\n\r\nexport var positions = [];\r\nexport var performanceData = [];\r\n//=  [\r\n  \r\n  /* {\r\n    \"symbol\": \"SNAP\",\r\n    \"name\": \"Snap Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"13.52\",\r\n    \"price_open\": \"13.18\",\r\n    \"day_high\": \"13.65\",\r\n    \"day_low\": \"12.71\",\r\n    \"52_week_high\": \"18.36\",\r\n    \"52_week_low\": \"4.82\",\r\n    \"day_change\": \"0.34\",\r\n    \"change_pct\": \"2.58\",\r\n    \"close_yesterday\": \"13.18\",\r\n    \"market_cap\": \"18647865344\",\r\n    \"volume\": \"54048642\",\r\n    \"volume_avg\": \"44871025\",\r\n    \"shares\": \"1103779968\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-24 16:01:50\",\r\n    \"pe\": \"N/A\",\r\n    \"eps\": \"-0.72\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"TWTR\",\r\n    \"name\": \"Twitter, Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"30.75\",\r\n    \"price_open\": \"31.86\",\r\n    \"day_high\": \"32.39\",\r\n    \"day_low\": \"30.51\",\r\n    \"52_week_high\": \"45.86\",\r\n    \"52_week_low\": \"26.26\",\r\n    \"day_change\": \"-8.08\",\r\n    \"change_pct\": \"-20.81\",\r\n    \"close_yesterday\": \"38.83\",\r\n    \"market_cap\": \"23770302464\",\r\n    \"volume\": \"105075360\",\r\n    \"volume_avg\": \"10571275\",\r\n    \"shares\": \"773017984\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-24 16:03:45\",\r\n    \"pe\": \"10.16\",\r\n    \"eps\": \"3.03\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"AAPL\",\r\n    \"name\": \"Apple Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"246.58\",\r\n    \"price_open\": \"243.16\",\r\n    \"day_high\": \"246.72\",\r\n    \"day_low\": \"242.89\",\r\n    \"52_week_high\": \"246.72\",\r\n    \"52_week_low\": \"142.00\",\r\n    \"day_change\": \"3.00\",\r\n    \"change_pct\": \"1.23\",\r\n    \"close_yesterday\": \"243.58\",\r\n    \"market_cap\": \"1114344259584\",\r\n    \"volume\": \"15827692\",\r\n    \"volume_avg\": \"20028962\",\r\n    \"shares\": \"4519199744\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"20.94\",\r\n    \"eps\": \"11.78\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"FB\",\r\n    \"name\": \"Facebook, Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"187.89\",\r\n    \"price_open\": \"185.83\",\r\n    \"day_high\": \"189.00\",\r\n    \"day_low\": \"185.09\",\r\n    \"52_week_high\": \"208.66\",\r\n    \"52_week_low\": \"123.02\",\r\n    \"day_change\": \"1.51\",\r\n    \"change_pct\": \"0.81\",\r\n    \"close_yesterday\": \"186.38\",\r\n    \"market_cap\": \"536040767488\",\r\n    \"volume\": \"6979273\",\r\n    \"volume_avg\": \"12925912\",\r\n    \"shares\": \"2405720064\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"31.78\",\r\n    \"eps\": \"5.91\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"GOOGL\",\r\n    \"name\": \"Alphabet Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"1264.30\",\r\n    \"price_open\": \"1252.00\",\r\n    \"day_high\": \"1268.00\",\r\n    \"day_low\": \"1249.15\",\r\n    \"52_week_high\": \"1296.97\",\r\n    \"52_week_low\": \"977.66\",\r\n    \"day_change\": \"5.19\",\r\n    \"change_pct\": \"0.41\",\r\n    \"close_yesterday\": \"1259.11\",\r\n    \"market_cap\": \"877319290880\",\r\n    \"volume\": \"1243991\",\r\n    \"volume_avg\": \"1160087\",\r\n    \"shares\": \"299532000\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"25.52\",\r\n    \"eps\": \"49.54\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"MSFT\",\r\n    \"name\": \"Microsoft Corporation\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"140.73\",\r\n    \"price_open\": \"139.34\",\r\n    \"day_high\": \"141.14\",\r\n    \"day_low\": \"139.20\",\r\n    \"52_week_high\": \"142.37\",\r\n    \"52_week_low\": \"93.96\",\r\n    \"day_change\": \"0.79\",\r\n    \"change_pct\": \"0.56\",\r\n    \"close_yesterday\": \"139.94\",\r\n    \"market_cap\": \"1094723174400\",\r\n    \"volume\": \"20464765\",\r\n    \"volume_avg\": \"26070562\",\r\n    \"shares\": \"7695349760\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"26.55\",\r\n    \"eps\": \"5.30\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"INTC\",\r\n    \"name\": \"Intel Corporation\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"56.46\",\r\n    \"price_open\": \"54.19\",\r\n    \"day_high\": \"56.61\",\r\n    \"day_low\": \"53.95\",\r\n    \"52_week_high\": \"59.59\",\r\n    \"52_week_low\": \"42.86\",\r\n    \"day_change\": \"4.23\",\r\n    \"change_pct\": \"8.10\",\r\n    \"close_yesterday\": \"52.23\",\r\n    \"market_cap\": \"252583968768\",\r\n    \"volume\": \"56704514\",\r\n    \"volume_avg\": \"16469900\",\r\n    \"shares\": \"4430000128\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"13.11\",\r\n    \"eps\": \"4.31\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"CRM\",\r\n    \"name\": \"salesforce.com, inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"150.49\",\r\n    \"price_open\": \"147.05\",\r\n    \"day_high\": \"150.66\",\r\n    \"day_low\": \"146.30\",\r\n    \"52_week_high\": \"167.56\",\r\n    \"52_week_low\": \"113.60\",\r\n    \"day_change\": \"2.37\",\r\n    \"change_pct\": \"1.60\",\r\n    \"close_yesterday\": \"148.12\",\r\n    \"market_cap\": \"131979730944\",\r\n    \"volume\": \"4814264\",\r\n    \"volume_avg\": \"5236950\",\r\n    \"shares\": \"877000000\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:01:48\",\r\n    \"pe\": \"124.99\",\r\n    \"eps\": \"1.20\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"CSCO\",\r\n    \"name\": \"Cisco Systems, Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"46.90\",\r\n    \"price_open\": \"46.54\",\r\n    \"day_high\": \"46.99\",\r\n    \"day_low\": \"46.46\",\r\n    \"52_week_high\": \"58.26\",\r\n    \"52_week_low\": \"40.25\",\r\n    \"day_change\": \"0.49\",\r\n    \"change_pct\": \"1.06\",\r\n    \"close_yesterday\": \"46.41\",\r\n    \"market_cap\": \"196328095744\",\r\n    \"volume\": \"12554651\",\r\n    \"volume_avg\": \"16144737\",\r\n    \"shares\": \"4243830016\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"17.97\",\r\n    \"eps\": \"2.61\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"ORCL\",\r\n    \"name\": \"Oracle Corporation\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"54.17\",\r\n    \"price_open\": \"54.04\",\r\n    \"day_high\": \"54.42\",\r\n    \"day_low\": \"54.01\",\r\n    \"52_week_high\": \"60.50\",\r\n    \"52_week_low\": \"42.40\",\r\n    \"day_change\": \"-0.09\",\r\n    \"change_pct\": \"-0.17\",\r\n    \"close_yesterday\": \"54.26\",\r\n    \"market_cap\": \"177814110208\",\r\n    \"volume\": \"5741404\",\r\n    \"volume_avg\": \"9189612\",\r\n    \"shares\": \"3288329984\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:03:50\",\r\n    \"pe\": \"17.73\",\r\n    \"eps\": \"3.06\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"SAP\",\r\n    \"name\": \"SAP SE\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"131.87\",\r\n    \"price_open\": \"131.35\",\r\n    \"day_high\": \"132.18\",\r\n    \"day_low\": \"130.96\",\r\n    \"52_week_high\": \"140.62\",\r\n    \"52_week_low\": \"94.81\",\r\n    \"day_change\": \"0.08\",\r\n    \"change_pct\": \"0.06\",\r\n    \"close_yesterday\": \"131.79\",\r\n    \"market_cap\": \"162669559808\",\r\n    \"volume\": \"558142\",\r\n    \"volume_avg\": \"1046450\",\r\n    \"shares\": \"1228499968\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:04:17\",\r\n    \"pe\": \"31.86\",\r\n    \"eps\": \"4.14\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"TSM\",\r\n    \"name\": \"Taiwan Semiconductor Manufacturing Company Limited\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"51.13\",\r\n    \"price_open\": \"50.80\",\r\n    \"day_high\": \"51.23\",\r\n    \"day_low\": \"50.69\",\r\n    \"52_week_high\": \"51.23\",\r\n    \"52_week_low\": \"34.21\",\r\n    \"day_change\": \"0.18\",\r\n    \"change_pct\": \"0.35\",\r\n    \"close_yesterday\": \"50.95\",\r\n    \"market_cap\": \"250063552512\",\r\n    \"volume\": \"5965678\",\r\n    \"volume_avg\": \"9484987\",\r\n    \"shares\": \"5186079744\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:01:26\",\r\n    \"pe\": \"22.93\",\r\n    \"eps\": \"2.23\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"ACN\",\r\n    \"name\": \"Accenture plc\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"183.07\",\r\n    \"price_open\": \"184.67\",\r\n    \"day_high\": \"184.83\",\r\n    \"day_low\": \"183.02\",\r\n    \"52_week_high\": \"202.80\",\r\n    \"52_week_low\": \"132.63\",\r\n    \"day_change\": \"-1.93\",\r\n    \"change_pct\": \"-1.04\",\r\n    \"close_yesterday\": \"185.00\",\r\n    \"market_cap\": \"116597284864\",\r\n    \"volume\": \"1369124\",\r\n    \"volume_avg\": \"1892150\",\r\n    \"shares\": \"636000000\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:12\",\r\n    \"pe\": \"24.87\",\r\n    \"eps\": \"7.36\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"ADBE\",\r\n    \"name\": \"Adobe Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"270.98\",\r\n    \"price_open\": \"267.80\",\r\n    \"day_high\": \"271.61\",\r\n    \"day_low\": \"267.02\",\r\n    \"52_week_high\": \"313.11\",\r\n    \"52_week_low\": \"204.95\",\r\n    \"day_change\": \"1.28\",\r\n    \"change_pct\": \"0.47\",\r\n    \"close_yesterday\": \"269.70\",\r\n    \"market_cap\": \"131175735296\",\r\n    \"volume\": \"1511852\",\r\n    \"volume_avg\": \"3342325\",\r\n    \"shares\": \"484079008\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"48.22\",\r\n    \"eps\": \"5.62\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"AVGO\",\r\n    \"name\": \"Broadcom Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"289.82\",\r\n    \"price_open\": \"283.26\",\r\n    \"day_high\": \"291.37\",\r\n    \"day_low\": \"283.22\",\r\n    \"52_week_high\": \"323.20\",\r\n    \"52_week_low\": \"208.23\",\r\n    \"day_change\": \"7.51\",\r\n    \"change_pct\": \"2.66\",\r\n    \"close_yesterday\": \"282.31\",\r\n    \"market_cap\": \"114963193856\",\r\n    \"volume\": \"1987976\",\r\n    \"volume_avg\": \"1691400\",\r\n    \"shares\": \"396671008\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"40.79\",\r\n    \"eps\": \"7.11\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"IBM\",\r\n    \"name\": \"International Business Machines Corporation\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"135.44\",\r\n    \"price_open\": \"134.12\",\r\n    \"day_high\": \"135.93\",\r\n    \"day_low\": \"134.10\",\r\n    \"52_week_high\": \"152.95\",\r\n    \"52_week_low\": \"105.94\",\r\n    \"day_change\": \"1.37\",\r\n    \"change_pct\": \"1.02\",\r\n    \"close_yesterday\": \"134.07\",\r\n    \"market_cap\": \"119982915584\",\r\n    \"volume\": \"2543592\",\r\n    \"volume_avg\": \"5996562\",\r\n    \"shares\": \"885875008\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:04\",\r\n    \"pe\": \"14.23\",\r\n    \"eps\": \"9.52\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"NVDA\",\r\n    \"name\": \"NVIDIA Corporation\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"204.54\",\r\n    \"price_open\": \"200.10\",\r\n    \"day_high\": \"205.38\",\r\n    \"day_low\": \"199.79\",\r\n    \"52_week_high\": \"222.00\",\r\n    \"52_week_low\": \"124.46\",\r\n    \"day_change\": \"7.68\",\r\n    \"change_pct\": \"3.90\",\r\n    \"close_yesterday\": \"196.86\",\r\n    \"market_cap\": \"122178895872\",\r\n    \"volume\": \"10357677\",\r\n    \"volume_avg\": \"8645212\",\r\n    \"shares\": \"609000000\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"46.12\",\r\n    \"eps\": \"4.44\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"ASML\",\r\n    \"name\": \"ASML Holding N.V.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"263.99\",\r\n    \"price_open\": \"262.45\",\r\n    \"day_high\": \"264.70\",\r\n    \"day_low\": \"261.88\",\r\n    \"52_week_high\": \"269.39\",\r\n    \"52_week_low\": \"144.50\",\r\n    \"day_change\": \"-0.98\",\r\n    \"change_pct\": \"-0.37\",\r\n    \"close_yesterday\": \"264.97\",\r\n    \"market_cap\": \"110834614272\",\r\n    \"volume\": \"549797\",\r\n    \"volume_avg\": \"1164687\",\r\n    \"shares\": \"421143008\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"37.94\",\r\n    \"eps\": \"6.96\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"INTU\",\r\n    \"name\": \"Intuit Inc.\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"257.67\",\r\n    \"price_open\": \"259.13\",\r\n    \"day_high\": \"260.28\",\r\n    \"day_low\": \"256.70\",\r\n    \"52_week_high\": \"295.77\",\r\n    \"52_week_low\": \"182.61\",\r\n    \"day_change\": \"-1.23\",\r\n    \"change_pct\": \"-0.48\",\r\n    \"close_yesterday\": \"258.90\",\r\n    \"market_cap\": \"67013271552\",\r\n    \"volume\": \"1038001\",\r\n    \"volume_avg\": \"1170162\",\r\n    \"shares\": \"260074000\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"43.75\",\r\n    \"eps\": \"5.89\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"QCOM\",\r\n    \"name\": \"QUALCOMM Incorporated\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"80.17\",\r\n    \"price_open\": \"79.00\",\r\n    \"day_high\": \"80.23\",\r\n    \"day_low\": \"78.91\",\r\n    \"52_week_high\": \"90.34\",\r\n    \"52_week_low\": \"49.10\",\r\n    \"day_change\": \"1.18\",\r\n    \"change_pct\": \"1.49\",\r\n    \"close_yesterday\": \"78.99\",\r\n    \"market_cap\": \"97459462144\",\r\n    \"volume\": \"5950509\",\r\n    \"volume_avg\": \"5573175\",\r\n    \"shares\": \"1215660032\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"29.34\",\r\n    \"eps\": \"2.73\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"SNE\",\r\n    \"name\": \"Sony Corporation\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"58.51\",\r\n    \"price_open\": \"58.23\",\r\n    \"day_high\": \"58.62\",\r\n    \"day_low\": \"58.03\",\r\n    \"52_week_high\": \"60.74\",\r\n    \"52_week_low\": \"41.91\",\r\n    \"day_change\": \"-0.12\",\r\n    \"change_pct\": \"-0.20\",\r\n    \"close_yesterday\": \"58.63\",\r\n    \"market_cap\": \"71632035840\",\r\n    \"volume\": \"670753\",\r\n    \"volume_avg\": \"757475\",\r\n    \"shares\": \"1234150016\",\r\n    \"stock_exchange_long\": \"New York Stock Exchange\",\r\n    \"stock_exchange_short\": \"NYSE\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:02:00\",\r\n    \"pe\": \"12.30\",\r\n    \"eps\": \"4.76\"\r\n\r\n  },\r\n  {\r\n    \"symbol\": \"TXN\",\r\n    \"name\": \"Texas Instruments Incorporated\",\r\n    \"currency\": \"USD\",\r\n    \"price\": \"120.51\",\r\n    \"price_open\": \"118.51\",\r\n    \"day_high\": \"120.68\",\r\n    \"day_low\": \"118.51\",\r\n    \"52_week_high\": \"132.20\",\r\n    \"52_week_low\": \"87.70\",\r\n    \"day_change\": \"2.10\",\r\n    \"change_pct\": \"1.77\",\r\n    \"close_yesterday\": \"118.41\",\r\n    \"market_cap\": \"112698302464\",\r\n    \"volume\": \"4106890\",\r\n    \"volume_avg\": \"6018987\",\r\n    \"shares\": \"933619968\",\r\n    \"stock_exchange_long\": \"NASDAQ Stock Exchange\",\r\n    \"stock_exchange_short\": \"NASDAQ\",\r\n    \"timezone\": \"EDT\",\r\n    \"timezone_name\": \"America/New_York\",\r\n    \"gmt_offset\": \"-14400\",\r\n    \"last_trade_time\": \"2019-10-25 16:00:01\",\r\n    \"pe\": \"22.37\",\r\n    \"eps\": \"5.39\"\r\n\r\n  }\r\n\r\n];  */","import { performanceData } from \"./positions\";\r\n\r\n\r\n/* var tempData;\r\n    for(var i=0; i<performanceData.length;i++){\r\n      tempData = performanceData[i].walletBalance;\r\n      performanceData.push(tempData);\r\n      console.log(tempData);\r\n      \r\n}  */\r\nconsole.log(performanceData);\r\n\r\n\r\n\r\nexport const performance = [\r\n  \"14987\", \"16259\", \"15700\", \"18193\", \"22181\", \"21269\", \"20319\"\r\n] ","import React from \"react\";\r\nimport { info } from \"../data/info\";\r\nimport { allocation } from \"../data/allocation\";\r\nimport { performance } from \"../data/performance\";\r\nimport { positions, performanceData } from \"../data/positions\";\r\nimport { Allocation, Position, HistoryList} from \"../data/models\";\r\nimport { resolve } from \"path\";\r\n\r\n\r\nfunction getRandomDelay() {\r\n  // return 0;\r\n  return 500 + (Math.random() * 2000);\r\n  // return 9999999999;\r\n}\r\n\r\nexport function getFundInfo(): Promise<any> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(info);\r\n    }, getRandomDelay());\r\n  })\r\n}\r\n\r\nexport function getFundAllocation(): Promise<Allocation[]> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(allocation);\r\n    }, 3000);\r\n  });\r\n}\r\n\r\nexport function getPerformance(): Promise<string[]> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(performance);\r\n    }, 3000);\r\n  })\r\n}\r\n\r\nexport function getPerformanceData(): Promise<HistoryList[]> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(performanceData);\r\n    }, 3000)\r\n  })\r\n}\r\n\r\nexport function getPositions(): Promise<HistoryList[]> {  \r\n    return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(positions);\r\n    }, 3000);\r\n  });\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <span className=\"k-icon k-i-loading\"></span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\r\n\r\nimport { getFundInfo } from \"../services/dataService\";\r\nimport Loading from \"../layout/Loading\";\r\nimport { FundInfo } from \"../data/models\";\r\n\r\nimport { AdvancedChart, MiniChart, TechnicalAnalysis, TickerTape, Timeline } from \"react-tradingview-embed\";\r\n\r\n<AdvancedChart widgetProps={{\"theme\": \"dark\"}} />\r\n\r\nexport default function InfoPanel() {\r\n  const [fundInfo, setFundInfo] = React.useState<FundInfo>();\r\n  React.useEffect(() => {\r\n    getFundInfo().then((data: FundInfo) => {\r\n      setFundInfo(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!fundInfo && <Loading />}\r\n      <TickerTape widgetPropsAny={{\"theme\": \"light\"}}/>\r\n      <PanelBar style={{ opacity: fundInfo ? \"1\" : \"0\" }}>\r\n        <PanelBarItem  expanded={true} title=\"Investment Summary\">\r\n          <div>\r\n            <p>This is a summary of your investment's performance. Displayed are your asset holdings, profit/Loss and trade history.\r\n            </p>\r\n            {/* {fundInfo && fundInfo.managers.map((item, idx) => (\r\n              <div className=\"manager\" key={idx}>\r\n                <img src={`/team/${item.firstName}${item.lastName}.png`}\r\n                  alt={item.firstName + ' ' + item.lastName} />\r\n                <span className=\"manager-info\">\r\n                  <h2>{item.firstName + ' ' + item.lastName}</h2>\r\n                  <p>{item.position}</p>\r\n                </span>\r\n              </div>\r\n            ))} */}\r\n          </div>\r\n        </PanelBarItem>\r\n        {/*<PanelBarItem title={\"Market News\"}>\r\n          {fundInfo && fundInfo.quarters.map((quarter, idx) => (\r\n            <PanelBarItem title={quarter.title} key={idx}>\r\n              <ul className=\"fund-detail-list\">\r\n                {quarter.details.map((detail, index) => (\r\n                  <li key={index}>\r\n                    <span>{detail.name}:</span>\r\n                    <span>{detail.value}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </PanelBarItem>\r\n          ))} \r\n        </PanelBarItem >*/}\r\n      </PanelBar> \r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Chart,\r\n  ChartLegend,\r\n  ChartSeries,\r\n  ChartSeriesItem,\r\n  ChartSeriesLabels,\r\n  ChartTitle,\r\n  ChartTooltip\r\n} from \"@progress/kendo-react-charts\";\r\n\r\nimport { getFundAllocation } from \"../services/dataService\";\r\nimport Loading from \"../layout/Loading\";\r\nimport { Allocation } from \"../data/models\";\r\n\r\nconst labelContent = (e: any) => (`${e.value} BTC`);\r\n\r\nconst renderTooltip = (e: any) => {\r\n  return <div>{e.point ? e.point.category : \"\"}</div>;\r\n};\r\n\r\nexport default function AllocationPanel() {\r\n  const [data, setData] = React.useState<Allocation[]>();\r\n  React.useEffect(() => {\r\n    getFundAllocation().then((data: Allocation[]) => {\r\n      setData(data);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!data && <Loading />}\r\n      <Chart style={{ opacity: data ? \"1\" : \"0\" }}>\r\n        <ChartTitle text={\"Asset Allocation\"}></ChartTitle>\r\n        <ChartSeries>\r\n          <ChartSeriesItem type=\"donut\" data={data}>\r\n            <ChartSeriesLabels content={labelContent} background=\"none\" color=\"#fff\" />\r\n          </ChartSeriesItem>\r\n        </ChartSeries>\r\n        <ChartLegend position={\"bottom\"} visible={true} />\r\n        <ChartTooltip render={renderTooltip} />\r\n      </Chart>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { HistoryList, PerformanceData } from \"../data/models\";\r\nimport {\r\n  Chart,\r\n  ChartSeries,\r\n  ChartSeriesItem,\r\n  ChartCategoryAxis,\r\n  ChartCategoryAxisItem,\r\n  ChartTitle,\r\n} from \"@progress/kendo-react-charts\";\r\n\r\nimport { getPerformance, getPerformanceData, getPositions } from \"../services/dataService\";\r\nimport Loading from \"../layout/Loading\";\r\nimport { performanceData } from \"../data/positions\";\r\n\r\n\r\n\r\nexport default function PerformancePanel() {\r\n\r\n  \r\n  let TData :any[] = [];\r\n  let BDates : string[] = [];\r\n  let readyDates : string[] = [];\r\n  const [data, setData] = React.useState<string[]>();\r\n  const [dates, setDates] = React.useState<string[]>();\r\n  React.useEffect(() => {\r\n    // 🆗 Ship it\r\n\r\n  (async () => {\r\n    const users = await getPerformanceData();\r\n    console.log(performanceData);\r\n    console.log(performanceData.length);\r\n    const balances = JSON.stringify(performanceData,['walletBalance']);\r\n    const bDates =  JSON.stringify(performanceData,['transactTime']);\r\n    console.log(balances);\r\n    \r\n\r\n    JSON.parse(\r\n      balances,\r\n      (key, value : string) =>\r\n        typeof value === \"number\"\r\n          ? TData.push(value/100000000) // return value * 2 for numbers\r\n          : value, // return everything else unchanged\r\n    );\r\n    // { p: 10 } \r\n      console.log(TData);\r\n      setData(TData.reverse());\r\n    \r\n      JSON.parse(bDates, (key, value) =>\r\n      typeof value === \"string\"\r\n      ? BDates.push(value)\r\n      :value,);\r\n      \r\n      var currentDate : Date;\r\n      for (var counter=0; counter<BDates.length;counter++){\r\n        // Creating a date object\r\n        currentDate = new Date(BDates[counter]); // yyyy-mm-dd\r\n        // Getting short month name (e.g. \"Oct\")\r\n        var month = currentDate.toLocaleString('default', { month: 'short' });\r\n        var day = currentDate.getDate();\r\n        console.log(month + '\\n' + day);\r\n        readyDates.push((month + '\\n' + day).toString());\r\n      }\r\n\r\n      readyDates = readyDates.reverse();\r\n      setDates(readyDates);\r\n      console.log(readyDates);          \r\n      \r\n    \r\n  })();\r\n\r\n  return () => {\r\n    \r\n    // this now gets called when the component unmounts\r\n  };\r\n\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!data && <Loading />}\r\n      <Chart style={{ opacity: data ? \"1\" : \"0\" }}>\r\n        <ChartTitle text=\"Investment Performance\" />\r\n        <ChartCategoryAxis>\r\n          <ChartCategoryAxisItem categories={dates} />\r\n        </ChartCategoryAxis>\r\n        <ChartSeries>\r\n          <ChartSeriesItem type=\"line\" data={data} />\r\n        </ChartSeries>\r\n      </Chart>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\r\n\r\nimport { getPositions } from \"../services/dataService\";\r\nimport Loading from \"../layout/Loading\";\r\nimport { Position, HistoryList } from \"../data/models\";\r\n//import { Grid } from \"gridjs-react\";\r\nimport \"gridjs/dist/theme/mermaid.css\";\r\n//import { getHistory } from \"../data/historyList\";\r\n\r\nimport { BitmexAPI } from \"bitmex-node\";\r\n\r\n \r\nconst bitmex = new BitmexAPI({\r\n  //\"apiKeyID\": \"190HdmIelWTiR3RdVowC3E2F\",\r\n  //\"apiKeySecret\": \"F_8-GBfcsgKesyhydUI6KlhrbtBOM8S8efVxm2-72ZfArC8E\",\r\n  //\"proxy\": \"https://proxy.cors.sh/\"\r\n}); \r\n\r\n//const CoinMarketCap = require('coinmarketcap-api');\r\n\r\n//const apiKey = 'f6787a03-5ad2-43a6-838d-1bbb38eda1b0';\r\n//const coinClient = new CoinMarketCap(apiKey);\r\n//const btcCurrentPrice = coinClient.getQuotes({symbol: 'BTC,USD'}).then(console.log).catch(console.error);\r\n\r\n\r\n const NumberCell = (props: GridCellProps) => {\r\n  const field = props.field || \"\";\r\n  const startingValue = props.dataItem[field];\r\n  //console.log(btcCurrentPrice);\r\n  let finalValue = ((startingValue / 100000000)).toFixed(7);\r\n  /* if (startingValue > 1000000000) {\r\n    finalValue = (startingValue / 1000000000).toFixed(2) + \"B\";\r\n  }\r\n */\r\n  return <td>{finalValue} BTC</td>\r\n}\r\n\r\nconst ChangeCell = (props: GridCellProps) => {\r\n  const field = props.field || \"\";\r\n  const value = props.dataItem[field];\r\n  return (\r\n    <td className={value > 0 ? \"change-up\" : \"change-down\"}>\r\n      {(value / 100000000).toFixed(7)} BTC\r\n      {/* % */}\r\n    </td>\r\n  );\r\n} \r\n\r\nconst ChangeDate = (props: GridCellProps) => {\r\n  const field = props.field || \"\";\r\n  const value = props.dataItem[field];\r\n  var date_;\r\n  date_ = value ? value.substring(0,10) : 'Open Trade';\r\n  //console.log(value.substring(0,10));\r\n  return (\r\n    <td >\r\n      {date_}\r\n      {/* % */}\r\n    </td>\r\n  );\r\n} \r\n\r\n/* async function fetchHistory() {\r\n\r\n  const historyL = await bitmex.User.getWalletHistory({count:100});\r\n  \r\n  console.log(historyL);\r\n  return historyL;\r\n}  */\r\n\r\n\r\nexport default function PositionsPanel() {\r\n\r\n  \r\n\r\n  const [positions, setPositions] = React.useState<HistoryList[]>();\r\n  \r\n\r\n  React.useEffect(() => {\r\n    getPositions().then((data: HistoryList[]) => {\r\n      setPositions(data);\r\n    });    \r\n  }, []);\r\n  \r\n  /* var historyList: any = f();\r\n     \r\n  function f(): any {\r\n    \r\n      historyList = fetchHistory().then(result => {historyList=result;\r\n      console.log(historyList);\r\n      return historyList;\r\n\r\n    });\r\n    \r\n  }  */\r\n  \r\n  \r\n  \r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      {!positions && <Loading />}\r\n      {console.log(positions)}\r\n\r\n      {/* <Grid\r\n  data={[\r\n    ['John', 'john@example.com'],\r\n    ['Mike', 'mike@gmail.com']\r\n  ]}\r\n  columns={['Name', 'Email']}\r\n  search={true}\r\n  pagination={{\r\n    enabled: true,\r\n    limit: 1,\r\n  }}\r\n/>\r\n \r\n<Grid\r\n  columns= {['Title', 'Director', 'Producer']}\r\n  server= {{\r\n    url: 'https://swapi.dev/api/films/',\r\n    then: data => data.results.map((movie:any) => \r\n      [movie.title, movie.director, movie.producer]\r\n    )\r\n  } } \r\n  search={true}\r\n  pagination={{\r\n    enabled: true,\r\n    limit: 2,\r\n  }}\r\n/>\r\n\r\n<Grid\r\n  columns= {['Name', 'Email', 'Phone Number']}\r\n  data={ () => {\r\n    return new Promise(resolve => {\r\n      setTimeout(() =>\r\n        resolve([\r\n          ['John', 'john@example.com', '(353) 01 222 3333'],\r\n          ['Mark', 'mark@gmail.com', '(01) 22 888 4444']\r\n        ]), 1000);\r\n    });\r\n  }\r\n}\r\n/> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n      <Grid\r\n        data={positions}\r\n        style={{ opacity: positions ? \"1\" : \"0\" }}\r\n      >\r\n        <GridColumn title=\"Date\" field=\"timestamp\" cell={ChangeDate} locked={true} width={100} /> \r\n        <GridColumn title=\"Traded Asset Pair\" field=\"address\" />\r\n        <GridColumn title=\"Trade Status\" field=\"transactStatus\" />\r\n        <GridColumn title=\"Type of Transaction\" field=\"transactType\" />\r\n        <GridColumn title=\"Booked Profit/Loss\" field=\"amount\" cell={ChangeCell} />\r\n        <GridColumn title=\"Wallet Balance\" field=\"walletBalance\" cell={NumberCell} />\r\n        {/*  <GridColumn title=\"Current Balance less Open Trade\" field=\"volume\" cell={NumberCell} />\r\n        < GridColumn title=\"Market Cap\" field=\"market_cap\" cell={NumberCell} /> */}\r\n       </Grid> \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n//address: string,\r\n//  amount: number,\r\n//  currency: string,\r\n//  transactionType: string,\r\n//  walletBalance: number","import React from \"react\";\r\n\r\nimport InfoPanel from \"./panels/InfoPanel\";\r\nimport AllocationPanel from \"./panels/AllocationPanel\";\r\nimport PerformancePanel from \"./panels/PerformancePanel\";\r\nimport PositionsPanel from \"./panels/PositionsPanel\";\r\n\r\nexport default function Dashboard() {\r\n  return (\r\n    <div className=\"panels\">\r\n      <div className=\"panel-info\">\r\n        <InfoPanel />\r\n      </div>\r\n      <div className=\"panel-allocation\">\r\n        <AllocationPanel />\r\n      </div>\r\n      <div className=\"panel-balance\">\r\n        <PerformancePanel />\r\n      </div>\r\n      <div className=\"panel-positions\">\r\n        <PositionsPanel />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { count } from \"console\";\r\n\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <h2>Welcome to Rabson Capital</h2>\r\n\r\n      <p>Rabson Capital (RBC) is an investment fund that uses mathematical and statistical techniques together with automated algorithms and advanced quantitative models to make investment decisions and execute trades. There is 50% human intellect and judgment involved in investment selection and related decisions. </p>\r\n      <p>Rabson Capital operates using computer-based models, which mitigate risks and losses related to 100% human fund management. Just like any other investment fund, Rabson Capital aims to outperform the market by placing funds with liquid and publicly traded assets in a superior way. In financial terms, the goal is to generate alpha (excess return).</p>\r\n      <p>The quantitative models used by Rabson Capital are designed to detect investment opportunities in the market. Hence, the goal of Rabson Fund developers is to create a more superior model. The complex mathematical models carry out the buy/sell decisions alongside humans.</p>\r\n      <p>Not Man VS Machine <br /> but <br /> Man With Machine!</p>\r\n\r\n      <img src=\"/finance-chart.jpg\" width=\"100%\" alt=\"finance chart\"/>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport \"hammerjs\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport DrawerRouterContainer from \"./layout/DrawerRouterContainer\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Home from \"./Home\";\r\n\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <DrawerRouterContainer>\r\n        <div className=\"page-container\">\r\n          <Switch>\r\n            <Route path=\"/tech-fund\">\r\n              <Dashboard />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </DrawerRouterContainer>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}